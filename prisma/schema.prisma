generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  id       Int           @id @default(autoincrement())
  desc     String?
  rol      String        @unique
  usuarios usuario_rol[]
}

model usuario_rol {
  id        Int       @id @default(autoincrement())
  rolid     Int?
  usuarioid Int?
  rol       roles?    @relation(fields: [rolid], references: [id])
  usuario   usuarios? @relation(fields: [usuarioid], references: [id])
}

model usuarios {
  id                   Int                   @id @default(autoincrement())
  nombre               String
  amaterno             String
  apaterno             String
  usuario              String                @unique
  correo               String                @unique
  contrasena           String
  ncontrol             String
  admin                Boolean
  palabras_verificadas palabras_aprobadas[]  @relation("palabras_aprobadas_id_aprobado_porTousuarios")
  palabras_aprobadas   palabras_aprobadas[]
  palabras_rechazadas  palabras_pendientes[] @relation("palabras_pendientes_rechazado_porTousuarios")
  palabras_pendientes  palabras_pendientes[]
  roles                usuario_rol[]
}

model palabras_aprobadas {
  id              Int                @id @default(autoincrement())
  texto           String             @unique
  idtipo          Int
  usuarioid       Int?
  fonetica        String
  base_id         String?
  categoria_id    Int?
  id_aprobado_por Int?
  categoria       categorias?        @relation(fields: [categoria_id], references: [id])
  aprobada_por    usuarios?          @relation("palabras_aprobadas_id_aprobado_porTousuarios", fields: [id_aprobado_por], references: [id])
  tipo            tipos              @relation(fields: [idtipo], references: [id])
  usuario         usuarios?          @relation(fields: [usuarioid], references: [id])
  contextos       palabra_contexto[]
  traducciones    traducciones[]
}

model palabras_pendientes {
  id                  Int                @id @default(autoincrement())
  texto               String
  usuarioid           Int?
  idtipo              Int?
  fonetica            String?
  base_id             String?
  categoria_id        Int?
  rechazado           Boolean            @default(false)
  mensaje             String?
  rechazado_por       Int?
  ejemplo_esp         String?
  ejemplo_zap         String?
  categoria           categorias?        @relation(fields: [categoria_id], references: [id])
  tipo                tipos?             @relation(fields: [idtipo], references: [id])
  usuario_que_rechazo usuarios?          @relation("palabras_pendientes_rechazado_porTousuarios", fields: [rechazado_por], references: [id])
  usuario             usuarios?          @relation(fields: [usuarioid], references: [id])
  contextos           palabra_contexto[]
  traducciones        traducciones[]
}

model traducciones {
  id          Int                  @id @default(autoincrement())
  traduccion  String
  palabraid   Int?
  palabra_pid Int?
  pendiente   palabras_pendientes? @relation(fields: [palabra_pid], references: [id])
  aprobada    palabras_aprobadas?  @relation(fields: [palabraid], references: [id])
}

model categorias {
  id                  Int                   @id @default(autoincrement())
  categoria           String
  palabras_aprobadas  palabras_aprobadas[]
  palabras_pendientes palabras_pendientes[]
}

model contextos {
  id       Int                @id @default(autoincrement())
  contexto String
  palabras palabra_contexto[]
}

model palabra_contexto {
  id                 Int                  @id @default(autoincrement())
  id_palabra         Int?
  id_contexto        Int?
  id_posible_palabra Int?
  contexto           contextos?           @relation(fields: [id_contexto], references: [id])
  palabra            palabras_aprobadas?  @relation(fields: [id_palabra], references: [id])
  palabra_pendientes palabras_pendientes? @relation(fields: [id_posible_palabra], references: [id])
}

model tipos {
  id                  Int                   @id @default(autoincrement())
  tipo                String
  palabras_aprobadas  palabras_aprobadas[]
  palabras_pendientes palabras_pendientes[]
}
